(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{427:function(n,s,a){"use strict";a.r(s);var e=a(42),t=Object(e.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"spring-boot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot"}},[n._v("#")]),n._v(" spring-boot")]),n._v(" "),a("hr"),n._v(" "),a("h2",{attrs:{id:"特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[n._v("#")]),n._v(" 特点")]),n._v(" "),a("ul",[a("li",[n._v("创建独立的Spring应用程序")]),n._v(" "),a("li",[n._v("嵌入的Tomcat,无须部署WAR文件")]),n._v(" "),a("li",[n._v("简化Maven配置")]),n._v(" "),a("li",[n._v("自动配置Spring")]),n._v(" "),a("li",[n._v("提供生产就绪型功能，如指标，健康检查和外部配置")]),n._v(" "),a("li",[n._v("绝对没有代码生成，以及对XML没有配置要求")])]),n._v(" "),a("h2",{attrs:{id:"springboot源码解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot源码解析"}},[n._v("#")]),n._v(" SpringBoot源码解析")]),n._v(" "),a("h3",{attrs:{id:"springapplication"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springapplication"}},[n._v("#")]),n._v(" SpringApplication")]),n._v(" "),a("p",[n._v("跟随main函数方法里面的run方法一直到SpringApplication")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("public ConfigurableApplicationContext run(String... args) {\n    StopWatch stopWatch = new StopWatch();\n    stopWatch.start();\n    ConfigurableApplicationContext context = null;\n    ......\n        ApplicationArguments applicationArguments = new DefaultApplicationArguments(args);\n        ConfigurableEnvironment environment = prepareEnvironment(listeners, applicationArguments);\n        configureIgnoreBeanInfo(environment);\n        Banner printedBanner = printBanner(environment);\n        // 创建spring容器\n        context = createApplicationContext();\n        exceptionReporters = getSpringFactoriesInstances(SpringBootExceptionReporter.class,\n                new Class[] { ConfigurableApplicationContext.class }, context);\n        // 加载bean信息\n        prepareContext(context, environment, listeners, applicationArguments, printedBanner);\n        // 加载Spring扩展属性\n        refreshContext(context);\n    ......\n    return context;\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br")])]),a("h4",{attrs:{id:"createapplicationcontext-方法解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#createapplicationcontext-方法解析"}},[n._v("#")]),n._v(" createApplicationContext()方法解析")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('protected ConfigurableApplicationContext createApplicationContext() {\n    Class<?> contextClass = this.applicationContextClass;\n    if (contextClass == null) {\n        try {\n            // 注意\n            switch (this.webApplicationType) {\n            case SERVLET:\n                contextClass = Class.forName(DEFAULT_SERVLET_WEB_CONTEXT_CLASS);\n                break;\n            case REACTIVE:\n                contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS);\n                break;\n            default:\n                contextClass = Class.forName(DEFAULT_CONTEXT_CLASS);\n            }\n        }\n        catch (ClassNotFoundException ex) {\n            throw new IllegalStateException(\n                    "Unable create a default ApplicationContext, please specify an ApplicationContextClass", ex);\n        }\n    }\n    return (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass);\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br")])]),a("p",[n._v("this.webApplicationType 这个参数跟创建的应用类型有关。那么它是在哪里设置的？")]),n._v(" "),a("ul",[a("li",[n._v("SpringApplication的构造器设置了这个参数webApplicationType")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {\n    this.resourceLoader = resourceLoader;\n    Assert.notNull(primarySources, "PrimarySources must not be null");\n    this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources));\n    // 继续跟踪\n    this.webApplicationType = WebApplicationType.deduceFromClasspath();\n    setInitializers((Collection) getSpringFactoriesInstances(ApplicationContextInitializer.class));\n    setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class));\n    this.mainApplicationClass = deduceMainApplicationClass();\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br")])]),a("ul",[a("li",[n._v("WebApplicationType#deduceFromClasspath()方法")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("static WebApplicationType deduceFromClasspath() {\n    if (ClassUtils.isPresent(WEBFLUX_INDICATOR_CLASS, null) && !ClassUtils.isPresent(WEBMVC_INDICATOR_CLASS, null)\n            && !ClassUtils.isPresent(JERSEY_INDICATOR_CLASS, null)) {\n        return WebApplicationType.REACTIVE;\n    }\n    for (String className : SERVLET_INDICATOR_CLASSES) {\n        if (!ClassUtils.isPresent(className, null)) {\n            return WebApplicationType.NONE;\n        }\n    }\n    return WebApplicationType.SERVLET;\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br")])]),a("ul",[a("li",[n._v("应用类型")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("/**\n * The application should not run as a web application and should not start an\n * embedded web server.\n */\nNONE,\n\n/**\n * The application should run as a servlet-based web application and should start an\n * embedded servlet web server.\n */\nSERVLET,\n\n/**\n * The application should run as a reactive web application and should start an\n * embedded reactive web server.\n */\nREACTIVE;\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br")])]),a("h4",{attrs:{id:"preparecontext-方法解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#preparecontext-方法解析"}},[n._v("#")]),n._v(" prepareContext()方法解析")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("private void prepareContext(ConfigurableApplicationContext context, ConfigurableEnvironment environment,\n        SpringApplicationRunListeners listeners, ApplicationArguments applicationArguments, Banner printedBanner) {\n        \n    .....\n    \n    // 继续跟踪\n    load(context, sources.toArray(new Object[0]));\n    listeners.contextLoaded(context);\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br")])]),a("ul",[a("li",[n._v("load()方法\n在这里见到了熟悉BeanDefinitionLoader，它就是spring容器世界里用来加载Bean的信息的工具")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('protected void load(ApplicationContext context, Object[] sources) {\n    if (logger.isDebugEnabled()) {\n        logger.debug("Loading source " + StringUtils.arrayToCommaDelimitedString(sources));\n    }\n    BeanDefinitionLoader loader = createBeanDefinitionLoader(getBeanDefinitionRegistry(context), sources);\n    if (this.beanNameGenerator != null) {\n        loader.setBeanNameGenerator(this.beanNameGenerator);\n    }\n    if (this.resourceLoader != null) {\n        loader.setResourceLoader(this.resourceLoader);\n    }\n    if (this.environment != null) {\n        loader.setEnvironment(this.environment);\n    }\n    loader.load();\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br")])]),a("h4",{attrs:{id:"refreshcontext-方法解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#refreshcontext-方法解析"}},[n._v("#")]),n._v(" refreshContext()方法解析")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("private void refreshContext(ConfigurableApplicationContext context) {\n    // 继续跟踪\n    refresh(context);\n    if (this.registerShutdownHook) {\n        try {\n            context.registerShutdownHook();\n        }\n        catch (AccessControlException ex) {\n            // Not allowed in some environments.\n        }\n    }\n}\n\nprotected void refresh(ApplicationContext applicationContext) {\n    Assert.isInstanceOf(AbstractApplicationContext.class, applicationContext);\n    // 继续跟踪\n    ((AbstractApplicationContext) applicationContext).refresh();\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br")])]),a("ul",[a("li",[n._v("refresh方法解析\n对于Spring的扩展属性加载则更为简单，因为这些都是Sprinbg本身原有的东西，SpringBoot仅仅是使用refresh激活下。")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("@Override\npublic void refresh() throws BeansException, IllegalStateException {\n    synchronized (this.startupShutdownMonitor) {\n        // Prepare this context for refreshing.\n        prepareRefresh();\n\n        // Tell the subclass to refresh the internal bean factory.\n        ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();\n\n        // Prepare the bean factory for use in this context.\n        prepareBeanFactory(beanFactory);\n\n        try {\n            // Allows post-processing of the bean factory in context subclasses.\n            postProcessBeanFactory(beanFactory);\n\n            // Invoke factory processors registered as beans in the context.\n            invokeBeanFactoryPostProcessors(beanFactory);\n\n            // Register bean processors that intercept bean creation.\n            registerBeanPostProcessors(beanFactory);\n\n            // Initialize message source for this context.\n            initMessageSource();\n\n            // Initialize event multicaster for this context.\n            initApplicationEventMulticaster();\n\n            // Initialize other special beans in specific context subclasses.\n            onRefresh();\n\n            // Check for listener beans and register them.\n            registerListeners();\n\n            // Instantiate all remaining (non-lazy-init) singletons.\n            finishBeanFactoryInitialization(beanFactory);\n\n            // Last step: publish corresponding event.\n            finishRefresh();\n            .....\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br")])]),a("h2",{attrs:{id:"starter自动化配置的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#starter自动化配置的原理"}},[n._v("#")]),n._v(" Starter自动化配置的原理")]),n._v(" "),a("p",[n._v("跟踪main函数主类上的注解@SpringBootApplication")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Inherited\n@SpringBootConfiguration\n// SpringBoot 核心注解\n@EnableAutoConfiguration\n@ComponentScan(excludeFilters = { @Filter(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),\n\t\t@Filter(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) })\npublic @interface SpringBootApplication {\n    ......\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br")])]),a("p",[n._v("@EnableAutoConfiguration是Spring boot的全局开关，如果把这个注解去掉，则一切Starter都会失效，这就是约定大于配置的潜规则。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Inherited\n@AutoConfigurationPackage\n// 重点关注\n@Import(AutoConfigurationImportSelector.class)\npublic @interface EnableAutoConfiguration {\n    ......\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br")])]),a("p",[n._v("@Import(AutoConfigurationImportSelector.class)"),a("br"),n._v("\nAutoConfigurationImportSelector作为Starter自动化导入的关键选项终于浮现出来。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('protected AutoConfigurationEntry getAutoConfigurationEntry(AutoConfigurationMetadata autoConfigurationMetadata,\n        AnnotationMetadata annotationMetadata) {\n    if (!isEnabled(annotationMetadata)) {\n        return EMPTY_ENTRY;\n    }\n    AnnotationAttributes attributes = getAttributes(annotationMetadata);\n    // 重点关注\n    List<String> configurations = getCandidateConfigurations(annotationMetadata, attributes);\n    configurations = removeDuplicates(configurations);\n    Set<String> exclusions = getExclusions(annotationMetadata, attributes);\n    checkExcludedClasses(configurations, exclusions);\n    configurations.removeAll(exclusions);\n    configurations = filter(configurations, autoConfigurationMetadata);\n    fireAutoConfigurationImportEvents(configurations, exclusions);\n    return new AutoConfigurationEntry(configurations, exclusions);\n}\n\nprotected List<String> getCandidateConfigurations(AnnotationMetadata metadata, AnnotationAttributes attributes) {\n    // 继续跟踪\n    List<String> configurations = SpringFactoriesLoader.loadFactoryNames(getSpringFactoriesLoaderFactoryClass(),\n            getBeanClassLoader());\n    Assert.notEmpty(configurations, "No auto configuration classes found in META-INF/spring.factories. If you "\n            + "are using a custom packaging, make sure that file is correct.");\n    return configurations;\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br")])]),a("p",[n._v("在这两个方法中，我们看到了META-INF/spring.factories。之前我们制作starter模块，在这个文件中把相关的配置类声明在里面。"),a("br"),n._v("\n继续跟踪loadFactoryNames()方法")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("private static Map<String, List<String>> loadSpringFactories(@Nullable ClassLoader classLoader) {\n    MultiValueMap<String, String> result = cache.get(classLoader);\n    ......\n        Enumeration<URL> urls = (classLoader != null ?\n                // 重点关注\n                classLoader.getResources(FACTORIES_RESOURCE_LOCATION) :\n                // 重点关注\n                ClassLoader.getSystemResources(FACTORIES_RESOURCE_LOCATION));\n        result = new LinkedMultiValueMap<>();\n    ......\n}\t\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br")])]),a("p",[n._v("这就是为什么Starter的生效必须要依赖于配置META-INF/spring.factories文件，因为在启动过程中有一个硬编码的逻辑就是会扫描各个包中\n的对应文件，并把配置捞取出来。")])])}),[],!1,null,null,null);s.default=t.exports}}]);