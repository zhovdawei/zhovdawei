(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{408:function(e,n,s){"use strict";s.r(n);var t=s(42),a=Object(t.a)({},(function(){var e=this,n=e.$createElement,s=e._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"kubernetes集群搭建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes集群搭建"}},[e._v("#")]),e._v(" Kubernetes集群搭建")]),e._v(" "),s("hr"),e._v(" "),s("h2",{attrs:{id:"kubernetes由来"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes由来"}},[e._v("#")]),e._v(" Kubernetes由来")]),e._v(" "),s("p",[e._v("kubernetes，简称K8s，是用8代替8个字符“ubernete”而成的缩写。是一个开源的，用\n于管理云平台中多个主机上的容器化的应用，Kubernetes的目标是让部署容器化的应用简\n单并且高效（powerful）,Kubernetes提供了应用部署，规划，更新，维护的一种机制。\n"),s("br"),e._v("\nKubernetes是Google开源的一个容器编排引擎，它支持自动化部署、大规模可伸缩、应\n用容器化管理。在生产环境中部署一个应用程序时，通常要部署该应用的多个实例以便\n对应用请求进行负载均衡。\n"),s("br"),e._v("\n在Kubernetes中，我们可以创建多个容器，每个容器里面运行一个应用实例，然后通过\n内置的负载均衡策略，实现对这一组应用实例的管理、发现、访问，而这些细节都不需\n要运维人员去进行复杂的手工配置和处理。")]),e._v(" "),s("h3",{attrs:{id:"kubernetes集群架构图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes集群架构图"}},[e._v("#")]),e._v(" Kubernetes集群架构图")]),e._v(" "),s("p",[s("img",{attrs:{src:"/images/k8s/k8s0-1.png",alt:""}}),s("br"),e._v(" "),s("img",{attrs:{src:"/images/k8s/k8s0-2.png",alt:""}}),s("br")]),e._v(" "),s("h3",{attrs:{id:"kubernetes节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes节点"}},[e._v("#")]),e._v(" Kubernetes节点")]),e._v(" "),s("p",[e._v("在这张系统架构图中，我们把服务分为运行在工作节点上的服务和组成集群级别控制板的服务。"),s("br"),e._v("\nKubernetes节点有运行应用容器必备的服务，而这些都是受Master的控制。"),s("br"),e._v("\n每次个节点上当然都要运行Docker。Docker来负责所有具体的映像下载和容器运行。"),s("br"),e._v("\nKubernetes主要由以下几个核心组件组成："),s("br"),e._v(" "),s("strong",[e._v("etcd")]),e._v(" 保存了整个集群的状态；"),s("br"),e._v(" "),s("strong",[e._v("apiserver")]),e._v(" 提供了资源操作的唯一入口，并提供认证、授权、访问控制、API注册和发现等机制；"),s("br"),e._v(" "),s("strong",[e._v("controller manager")]),e._v(" 负责维护集群的状态，比如故障检测、自动扩展、滚动更新等；"),s("br"),e._v(" "),s("strong",[e._v("scheduler")]),e._v(" 负责资源的调度，按照预定的调度策略将Pod调度到相应的机器上；"),s("br"),e._v(" "),s("strong",[e._v("kubelet")]),e._v(" 负责维护容器的生命周期，同时也负责Volume（CVI）和网络（CNI）的管理；"),s("br"),e._v(" "),s("strong",[e._v("Container runtime")]),e._v(" 负责镜像管理以及Pod和容器的真正运行（CRI）；"),s("br"),e._v(" "),s("strong",[e._v("kube-proxy")]),e._v(" 负责为Service提供cluster内部的服务发现和负载均衡；"),s("br")]),e._v(" "),s("p",[e._v("除了核心组件，还有一些推荐的Add-ons："),s("br"),e._v(" "),s("strong",[e._v("kube-dns")]),e._v(" 负责为整个集群提供DNS服务"),s("br"),e._v(" "),s("strong",[e._v("Ingress Controller")]),e._v(" 为服务提供外网入口"),s("br"),e._v(" "),s("strong",[e._v("Heapster")]),e._v(" 提供资源监控"),s("br"),e._v(" "),s("strong",[e._v("Dashboard")]),e._v(" 提供GUI"),s("br"),e._v(" "),s("strong",[e._v("Federation")]),e._v(" 提供跨可用区的集群"),s("br"),e._v(" "),s("strong",[e._v("Fluentd-elasticsearch")]),e._v(" 提供集群日志采集、存储与查询"),s("br")]),e._v(" "),s("h3",{attrs:{id:"kubernetes概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes概念"}},[e._v("#")]),e._v(" Kubernetes概念")]),e._v(" "),s("p",[s("strong",[e._v("Pod:")]),s("br"),e._v("\n最小部署单元"),s("br"),e._v("\n一组容器的集合"),s("br"),e._v("\n一个Pod中的容器共享网络命名空间"),s("br"),e._v("\nPod是短暂的"),s("br")]),e._v(" "),s("p",[s("strong",[e._v("Controllers:")]),s("br"),e._v("\nDeployment 无状态应用部署"),s("br"),e._v("\nStatefulSet 有状态应用部署"),s("br"),e._v("\nDaemonSet 确保所有node运行同一个Pod"),s("br"),e._v("\nJob 一次性任务"),s("br"),e._v("\nCronjon 定时任务"),s("br")]),e._v(" "),s("p",[s("strong",[e._v("Service:")]),s("br"),e._v("\n防止Pod失联"),s("br"),e._v("\n定义一组Pod的访问策略"),s("br")]),e._v(" "),s("p",[s("strong",[e._v("Label:")]),s("br"),e._v("\n标签，附加到某个资源上，用于关联对象，查询和筛选"),s("br")]),e._v(" "),s("p",[s("strong",[e._v("Namespaces:")]),s("br"),e._v("\n命名空间，将对象逻辑上隔离"),s("br"),e._v(" "),s("a",{attrs:{href:"https://www.kubernetes.org.cn/kubernetes%E8%AE%BE%E8%AE%A1%E6%9E%B6%E6%9E%84",target:"_blank",rel:"noopener noreferrer"}},[e._v("Kubernetes官方文档"),s("OutboundLink")],1)]),e._v(" "),s("h2",{attrs:{id:"安装要求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装要求"}},[e._v("#")]),e._v(" 安装要求")]),e._v(" "),s("p",[e._v("内存 : 2GB(最低)"),s("br"),e._v("\nCPU : 2个(最低)"),s("br"),e._v("\n硬盘 : 30GB(最低)"),s("br"),e._v("\n注意：上面是生产最低要求，试验环境自己把握。"),s("br"),e._v("\n集群所在网络要求互通，需要访问外网拉取镜像。"),s("br"),e._v("\n服务器禁止swap分区。"),s("br")]),e._v(" "),s("h2",{attrs:{id:"安装步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装步骤"}},[e._v("#")]),e._v(" 安装步骤")]),e._v(" "),s("p",[e._v("我这边是准备了3台2核4G的虚拟机。分别是:"),s("br"),e._v("\n192.168.163.108_k8s-master(主机名设置为k8s-master)"),s("br"),e._v("\n192.168.163.109_k8s-node1(主机名设置为k8s-node1)"),s("br"),e._v("\n192.168.163.110_k8s-node2(主机名设置为k8s-node2)"),s("br"),e._v("\n做一主二节点的k8s集群。")]),e._v(" "),s("h3",{attrs:{id:"安装说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装说明"}},[e._v("#")]),e._v(" 安装说明")]),e._v(" "),s("p",[e._v("此次k8s集群安装是kubeadm方式的安装。另一种比较流行的二进制安装，请自行百度。")]),e._v(" "),s("h3",{attrs:{id:"前置环境设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前置环境设置"}},[e._v("#")]),e._v(" 前置环境设置")]),e._v(" "),s("p",[e._v("建议你使用xshell软件访问主机，然后在工具里面选择发送键输入到所有会话。这样三台主机的操作\n就可以保持一致了，因为接下的操作，在三台主机上都是一样的。在个性化设置的场景，我们在单独去\n操作。\n"),s("img",{attrs:{src:"/images/k8s/k8s1.png",alt:""}}),s("br")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# 关闭防火墙\n$ systemctl stop firewalld\n$ systemctl disable firewalld\n\n# 关闭selinux\n$ sed -i 's/enforcing/disabled/' /etc/selinux/config \n$ setenforce 0\n\n# 关闭swap\n$ swapoff -a $ 临时\n$ vim /etc/fstab $ 永久\n\n# 添加主机名和IP对应关系\n$ vi /etc/hosts\n192.168.163.108 k8s-master\n192.168.163.109 k8s-node1\n192.168.163.110 k8s-node2\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br")])]),s("h3",{attrs:{id:"安装docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装docker"}},[e._v("#")]),e._v(" 安装docker")]),e._v(" "),s("p",[e._v("三台机都安装docker")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# 安装阿里云的源\n$ wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo\n\n# 安装18.06.1版本的docker,因为这个版本已经在k8s适配的docker版本列表中\n$ yum -y install docker-ce-18.06.1.ce-3.el7\n\n# 设置开机启动和启动docker\n$ systemctl enable docker && systemctl start docker\n\n# 验证docker已启动成功\n$ docker info\n...\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br")])]),s("h3",{attrs:{id:"安装kuberadm、kubelet和kubectl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装kuberadm、kubelet和kubectl"}},[e._v("#")]),e._v(" 安装kuberadm、kubelet和kubectl")]),e._v(" "),s("p",[e._v("三台机都要装这三个软件")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# 添加阿里云yum软件源\n$ cat > /etc/yum.repos.d/kubernetes.repo << EOF\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n\n# 安装这三个软件\n$ yum install -y kubelet-1.15.0 kubeadm-1.15.0 kubectl-1.15.0\n\n# 设置开机启动\n$ systemctl enable kubelet\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br")])]),s("h3",{attrs:{id:"master节点设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#master节点设置"}},[e._v("#")]),e._v(" master节点设置")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('# 可能会出现时钟不一致的问题\n$ ntpdate time.windows.com\n# 如果ntp没找到，需要安装\n$ yum install -y ntp\n\n# k8s-master上执行\n$ kubeadm init \\\n# 指定apiserver的IP，即master\n--apiserver-advertise-address=192.168.31.61 \\\n# 指定阿里云镜像仓库，墙的问题，大家都懂\n--image-repository registry.aliyuncs.com/google_containers \\\n# 指定k8s的版本\n--kubernetes-version v1.15.0 \\\n# 为kube-proxy指定虚拟ip网段\n--service-cidr=10.1.0.0/16 \\\n# 为pod指定ip网段\n--pod-network-cidr=10.244.0.0/16\n\n[root@k8s-master ~]# kubeadm init --apiserver-advertise-address=192.168.163.108 --image-repository registry.aliyuncs.com/google_containers --kubernetes-version v1.15.0 --service-cidr=10.1.0.0/16 --pod-network-cidr=10.244.0.0/16\n[init] Using Kubernetes version: v1.15.0\n[preflight] Running pre-flight checks\n\t[WARNING IsDockerSystemdCheck]: detected "cgroupfs" as the Docker cgroup driver. The recommended driver is "systemd". Please follow the guide at https://kubernetes.io/docs/setup/cri/\n[preflight] Pulling images required for setting up a Kubernetes cluster\n[preflight] This might take a minute or two, depending on the speed of your internet connection\n[preflight] You can also perform this action in beforehand using \'kubeadm config images pull\'\n[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"\n[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"\n[kubelet-start] Activating the kubelet service\n[certs] Using certificateDir folder "/etc/kubernetes/pki"\n[certs] Generating "ca" certificate and key\n[certs] Generating "apiserver-kubelet-client" certificate and key\n[certs] Generating "apiserver" certificate and key\n[certs] apiserver serving cert is signed for DNS names [k8s-master kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.1.0.1 192.168.163.108]\n[certs] Generating "front-proxy-ca" certificate and key\n[certs] Generating "front-proxy-client" certificate and key\n[certs] Generating "etcd/ca" certificate and key\n[certs] Generating "etcd/server" certificate and key\n[certs] etcd/server serving cert is signed for DNS names [k8s-master localhost] and IPs [192.168.163.108 127.0.0.1 ::1]\n[certs] Generating "etcd/peer" certificate and key\n[certs] etcd/peer serving cert is signed for DNS names [k8s-master localhost] and IPs [192.168.163.108 127.0.0.1 ::1]\n[certs] Generating "apiserver-etcd-client" certificate and key\n[certs] Generating "etcd/healthcheck-client" certificate and key\n[certs] Generating "sa" key and public key\n[kubeconfig] Using kubeconfig folder "/etc/kubernetes"\n[kubeconfig] Writing "admin.conf" kubeconfig file\n[kubeconfig] Writing "kubelet.conf" kubeconfig file\n[kubeconfig] Writing "controller-manager.conf" kubeconfig file\n[kubeconfig] Writing "scheduler.conf" kubeconfig file\n[control-plane] Using manifest folder "/etc/kubernetes/manifests"\n[control-plane] Creating static Pod manifest for "kube-apiserver"\n[control-plane] Creating static Pod manifest for "kube-controller-manager"\n[control-plane] Creating static Pod manifest for "kube-scheduler"\n[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"\n[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s\n[apiclient] All control plane components are healthy after 20.004501 seconds\n[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace\n[kubelet] Creating a ConfigMap "kubelet-config-1.15" in namespace kube-system with the configuration for the kubelets in the cluster\n[upload-certs] Skipping phase. Please see --upload-certs\n[mark-control-plane] Marking the node k8s-master as control-plane by adding the label "node-role.kubernetes.io/master=\'\'"\n[mark-control-plane] Marking the node k8s-master as control-plane by adding the taints [node-role.kubernetes.io/master:NoSchedule]\n[bootstrap-token] Using token: librlm.v8lybtn54e8p2719\n[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles\n[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials\n[bootstrap-token] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token\n[bootstrap-token] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster\n[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace\n[addons] Applied essential addon: CoreDNS\n[addons] Applied essential addon: kube-proxy\n\nYour Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun "kubectl apply -f [podnetwork].yaml" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 192.168.163.108:6443 --token librlm.v8lybtn54e8p2719 \\\n    --discovery-token-ca-cert-hash sha256:8c291447e63fb366e686b19c60338979fddae7a51840b5002d035ed34a3e9518 \n\n# 使用kubectl工具，上面master安装的输出中也说明了执行下面的三行命令\n[root@k8s-master ~]#   mkdir -p $HOME/.kube\n[root@k8s-master ~]#   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n[root@k8s-master ~]#   sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\n# 验证master节点在集群中\n[root@k8s-master ~]# kubectl get nodes\nNAME         STATUS     ROLES    AGE    VERSION\nk8s-master   NotReady   master   9m5s   v1.15.0\n\n# 安装pod网络插件(我这里失败了，网络访问不了)\n$ kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/a70459be0084506e4ec919aa1c114638878db11b/Documentation/kube-flannel.yml\n\n# 如果上面的失败了就执行下面的操作\n# 1.下载kube-flannel.yml\n$ wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\n# 2.编辑kube-flannel.yml  将镜像地址更换\n$ vi kube-flannel.yml \nimage: lizhenliang/flannel:v0.11.0-amd64\n# 3.重新执行\n$ kubectl apply -f kube-flannel.yml \n# 4.等待安装(5分钟左右，看你网络情况)\n\n# 验证master准备完毕，ready状态\n[root@k8s-master ~]# kubectl get pods -n kube-system\nNAME                                 READY   STATUS    RESTARTS   AGE\ncoredns-bccdc95cf-6vzs9              1/1     Running   0          49m\ncoredns-bccdc95cf-jn7fg              1/1     Running   0          49m\netcd-k8s-master                      1/1     Running   0          48m\nkube-apiserver-k8s-master            1/1     Running   0          48m\nkube-controller-manager-k8s-master   1/1     Running   0          48m\nkube-flannel-ds-amd64-r94rk          1/1     Running   0          6m29s\nkube-proxy-h6bwx                     1/1     Running   0          49m\nkube-scheduler-k8s-master            1/1     Running   0          48m\n\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br"),s("span",{staticClass:"line-number"},[e._v("47")]),s("br"),s("span",{staticClass:"line-number"},[e._v("48")]),s("br"),s("span",{staticClass:"line-number"},[e._v("49")]),s("br"),s("span",{staticClass:"line-number"},[e._v("50")]),s("br"),s("span",{staticClass:"line-number"},[e._v("51")]),s("br"),s("span",{staticClass:"line-number"},[e._v("52")]),s("br"),s("span",{staticClass:"line-number"},[e._v("53")]),s("br"),s("span",{staticClass:"line-number"},[e._v("54")]),s("br"),s("span",{staticClass:"line-number"},[e._v("55")]),s("br"),s("span",{staticClass:"line-number"},[e._v("56")]),s("br"),s("span",{staticClass:"line-number"},[e._v("57")]),s("br"),s("span",{staticClass:"line-number"},[e._v("58")]),s("br"),s("span",{staticClass:"line-number"},[e._v("59")]),s("br"),s("span",{staticClass:"line-number"},[e._v("60")]),s("br"),s("span",{staticClass:"line-number"},[e._v("61")]),s("br"),s("span",{staticClass:"line-number"},[e._v("62")]),s("br"),s("span",{staticClass:"line-number"},[e._v("63")]),s("br"),s("span",{staticClass:"line-number"},[e._v("64")]),s("br"),s("span",{staticClass:"line-number"},[e._v("65")]),s("br"),s("span",{staticClass:"line-number"},[e._v("66")]),s("br"),s("span",{staticClass:"line-number"},[e._v("67")]),s("br"),s("span",{staticClass:"line-number"},[e._v("68")]),s("br"),s("span",{staticClass:"line-number"},[e._v("69")]),s("br"),s("span",{staticClass:"line-number"},[e._v("70")]),s("br"),s("span",{staticClass:"line-number"},[e._v("71")]),s("br"),s("span",{staticClass:"line-number"},[e._v("72")]),s("br"),s("span",{staticClass:"line-number"},[e._v("73")]),s("br"),s("span",{staticClass:"line-number"},[e._v("74")]),s("br"),s("span",{staticClass:"line-number"},[e._v("75")]),s("br"),s("span",{staticClass:"line-number"},[e._v("76")]),s("br"),s("span",{staticClass:"line-number"},[e._v("77")]),s("br"),s("span",{staticClass:"line-number"},[e._v("78")]),s("br"),s("span",{staticClass:"line-number"},[e._v("79")]),s("br"),s("span",{staticClass:"line-number"},[e._v("80")]),s("br"),s("span",{staticClass:"line-number"},[e._v("81")]),s("br"),s("span",{staticClass:"line-number"},[e._v("82")]),s("br"),s("span",{staticClass:"line-number"},[e._v("83")]),s("br"),s("span",{staticClass:"line-number"},[e._v("84")]),s("br"),s("span",{staticClass:"line-number"},[e._v("85")]),s("br"),s("span",{staticClass:"line-number"},[e._v("86")]),s("br"),s("span",{staticClass:"line-number"},[e._v("87")]),s("br"),s("span",{staticClass:"line-number"},[e._v("88")]),s("br"),s("span",{staticClass:"line-number"},[e._v("89")]),s("br"),s("span",{staticClass:"line-number"},[e._v("90")]),s("br"),s("span",{staticClass:"line-number"},[e._v("91")]),s("br"),s("span",{staticClass:"line-number"},[e._v("92")]),s("br"),s("span",{staticClass:"line-number"},[e._v("93")]),s("br"),s("span",{staticClass:"line-number"},[e._v("94")]),s("br"),s("span",{staticClass:"line-number"},[e._v("95")]),s("br"),s("span",{staticClass:"line-number"},[e._v("96")]),s("br"),s("span",{staticClass:"line-number"},[e._v("97")]),s("br"),s("span",{staticClass:"line-number"},[e._v("98")]),s("br"),s("span",{staticClass:"line-number"},[e._v("99")]),s("br"),s("span",{staticClass:"line-number"},[e._v("100")]),s("br"),s("span",{staticClass:"line-number"},[e._v("101")]),s("br"),s("span",{staticClass:"line-number"},[e._v("102")]),s("br"),s("span",{staticClass:"line-number"},[e._v("103")]),s("br"),s("span",{staticClass:"line-number"},[e._v("104")]),s("br"),s("span",{staticClass:"line-number"},[e._v("105")]),s("br"),s("span",{staticClass:"line-number"},[e._v("106")]),s("br"),s("span",{staticClass:"line-number"},[e._v("107")]),s("br"),s("span",{staticClass:"line-number"},[e._v("108")]),s("br"),s("span",{staticClass:"line-number"},[e._v("109")]),s("br"),s("span",{staticClass:"line-number"},[e._v("110")]),s("br"),s("span",{staticClass:"line-number"},[e._v("111")]),s("br"),s("span",{staticClass:"line-number"},[e._v("112")]),s("br"),s("span",{staticClass:"line-number"},[e._v("113")]),s("br"),s("span",{staticClass:"line-number"},[e._v("114")]),s("br"),s("span",{staticClass:"line-number"},[e._v("115")]),s("br"),s("span",{staticClass:"line-number"},[e._v("116")]),s("br"),s("span",{staticClass:"line-number"},[e._v("117")]),s("br"),s("span",{staticClass:"line-number"},[e._v("118")]),s("br"),s("span",{staticClass:"line-number"},[e._v("119")]),s("br"),s("span",{staticClass:"line-number"},[e._v("120")]),s("br"),s("span",{staticClass:"line-number"},[e._v("121")]),s("br")])]),s("h3",{attrs:{id:"将node1和node2加入集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将node1和node2加入集群"}},[e._v("#")]),e._v(" 将node1和node2加入集群")]),e._v(" "),s("p",[e._v("这两台操作一致，你可以对着两台主机开启会话同步。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('# 在master节点配置时，有一段token打印，在node节点上执行它，就可以加入集群\n$ kubeadm join 192.168.163.108:6443 --token librlm.v8lybtn54e8p2719 \\\n       --discovery-token-ca-cert-hash sha256:8c291447e63fb366e686b19c60338979fddae7a51840b5002d035ed34a3e9518 \n\n# 如果出现[ERROR FileContent--proc-sys-net-bridge-bridge-nf-call-iptables]: /proc/sys/net/bridge/bridge-nf-call-iptables contents are not set to 1\n$ echo "1" >/proc/sys/net/bridge/bridge-nf-call-iptables\n\n# 正常安装如下\n[root@k8s-node1 ~]# kubeadm join 192.168.163.108:6443 --token librlm.v8lybtn54e8p2719     --discovery-token-ca-cert-hash sha256:8c291447e63fb366e686b19c60338979fddae7a51840b5002d035ed34a3e9518 \n[preflight] Running pre-flight checks\n\t[WARNING IsDockerSystemdCheck]: detected "cgroupfs" as the Docker cgroup driver. The recommended driver is "systemd". Please follow the guide at https://kubernetes.io/docs/setup/cri/\n[preflight] Reading configuration from the cluster...\n[preflight] FYI: You can look at this config file with \'kubectl -n kube-system get cm kubeadm-config -oyaml\'\n[kubelet-start] Downloading configuration for the kubelet from the "kubelet-config-1.15" ConfigMap in the kube-system namespace\n[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"\n[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"\n[kubelet-start] Activating the kubelet service\n[kubelet-start] Waiting for the kubelet to perform the TLS Bootstrap...\n\nThis node has joined the cluster:\n* Certificate signing request was sent to apiserver and a response was received.\n* The Kubelet was informed of the new secure connection details.\n\nRun \'kubectl get nodes\' on the control-plane to see this node join the cluster.\n\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br")])]),s("h3",{attrs:{id:"验证集群部署完毕"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#验证集群部署完毕"}},[e._v("#")]),e._v(" 验证集群部署完毕")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# 三台机都是Ready\n[root@k8s-master ~]# kubectl get nodes\nNAME         STATUS   ROLES    AGE     VERSION\nk8s-master   Ready    master   65m     v1.15.0\nk8s-node1    Ready    <none>   3m48s   v1.15.0\nk8s-node2    Ready    <none>   31s     v1.15.0\n\n# 部署nginx验证集群\n# 部署一个nginx\n[root@k8s-master ~]# kubectl create deployment nginx --image=nginx\ndeployment.apps/nginx created\n# 通过node节点暴露应用（使用node节点的ip+端口就可以访问）\n[root@k8s-master ~]# kubectl expose deployment nginx --port=80 --type=NodePort\nservice/nginx exposed\n# 查看nginx部署的情况和暴露的端口\n[root@k8s-master ~]# kubectl get pod,svc\nNAME                         READY   STATUS    RESTARTS   AGE\npod/nginx-554b9c67f9-jnff8   1/1     Running   0          23s\n\nNAME                 TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE\nservice/kubernetes   ClusterIP   10.1.0.1       <none>        443/TCP        85m\nservice/nginx        NodePort    10.1.138.213   <none>        80:30510/TCP   12s\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br")])]),s("p",[e._v("浏览器访问192.168.163.109:30510 或 192.168.163.110:30510 即可访问到nginx.\n"),s("img",{attrs:{src:"/images/k8s/k8s2.png",alt:""}}),s("br")]),e._v(" "),s("h2",{attrs:{id:"kubectl命令行管理工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kubectl命令行管理工具"}},[e._v("#")]),e._v(" kubectl命令行管理工具")]),e._v(" "),s("p",[s("img",{attrs:{src:"/images/k8s/kubectl-1.png",alt:""}}),s("br"),e._v(" "),s("img",{attrs:{src:"/images/k8s/kubectl-2.png",alt:""}}),s("br")])])}),[],!1,null,null,null);n.default=a.exports}}]);