(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{473:function(s,e,n){"use strict";n.r(e);var a=n(42),t=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"rabbitmq进阶四之消费成功-应答"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq进阶四之消费成功-应答"}},[s._v("#")]),s._v(" RabbitMQ进阶四之消费成功-应答")]),s._v(" "),n("hr"),s._v(" "),n("p",[s._v("消费者应答机制分两种：一种是默认的自动应答机制，一种是手动应答机制。")]),s._v(" "),n("h2",{attrs:{id:"测试自动应答"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试自动应答"}},[s._v("#")]),s._v(" 测试自动应答")]),s._v(" "),n("h3",{attrs:{id:"构建自动应答队列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构建自动应答队列"}},[s._v("#")]),s._v(" 构建自动应答队列")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("@Bean\npublic Queue autoConfirmQueue() {\n    return new Queue(AUTO_CONFIRM_QUEUE);\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"限制消费速率"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#限制消费速率"}},[s._v("#")]),s._v(" 限制消费速率")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 放在spring.rabbitmq后面\n# 消费者配置\nlistener:\n  simple:\n    # 最多只允许一条未确认\n    prefetch: 1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"构造消费者"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构造消费者"}},[s._v("#")]),s._v(" 构造消费者")]),s._v(" "),n("p",[s._v("在消息里面放一个标志，便于产生异常。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@RabbitListener(queues = QueueConfig.AUTO_CONFIRM_QUEUE)\npublic void receviceMsgAutoConfirm(Message message, Channel channel) {\n    String msg = new String(message.getBody());\n    System.out.println("消费确认测试 => " + msg);\n    int flag = Integer.parseInt(msg.split("-")[1]);\n    try {\n        Thread.sleep(5000);\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n    int x = 5 / flag;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h3",{attrs:{id:"测试异常消费"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试异常消费"}},[s._v("#")]),s._v(" 测试异常消费")]),s._v(" "),n("p",[s._v("发送消息“自动确认新消息688-0”,产生异常。可以观察到自动应答模式下，消费消息发生异常，消息被回退到了消息队列，还是方式队列头部。\n就可以看到，无效重复消费这条消息。如果只有一个消费者，那么该队列后面的消息，就会阻塞，造成消息的积压。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Caused by: java.lang.ArithmeticException: / by zero\n\tat com.david.consumer.ConsumerConfirmReceiver.receviceMsgAutoConfirm(ConsumerConfirmReceiver.java:24) ~[classes/:na]\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_91]\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_91]\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_91]\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_91]\n\t\n\t\n消费确认测试 => 自动确认新消息688-0\n2020-04-22 10:38:22.922  WARN 14880 --- [ntContainer#0-1] s.a.r.l.ConditionalRejectingErrorHandler : Execution of Rabbit message listener failed.\t\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"改造自动应答代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#改造自动应答代码"}},[s._v("#")]),s._v(" 改造自动应答代码")]),s._v(" "),n("p",[s._v("多加了一行代码，具体参数是什么意思，直接看注释。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@RabbitListener(queues = QueueConfig.AUTO_CONFIRM_QUEUE)\npublic void receviceMsgAutoConfirm(Message message, Channel channel) throws IOException {\n    String msg = new String(message.getBody());\n    System.out.println("消费确认测试 => " + msg);\n    int flag = Integer.parseInt(msg.split("-")[1]);\n    try {\n        Thread.sleep(5000);\n        int x = 5 / flag;\n    }catch (Exception e){\n        /**\n         * @param deliveryTag 来自收到的标签\n         * @param multiple    拒绝所有消息，包括提供的传递标签，为true；否，仅拒绝提供的交付标签\n         * @param requeue     如果应该重新排队被拒绝的消息，而不是而不是被丢弃/按照字母顺序排列，则为true\n         * */\n        channel.basicNack(message.getMessageProperties().getDeliveryTag(),false,false);\n        throw new RuntimeException(e.getMessage());\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("h3",{attrs:{id:"改造后再去测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#改造后再去测试"}},[s._v("#")]),s._v(" 改造后再去测试")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Caused by: java.lang.RuntimeException: / by zero\n\tat com.david.consumer.ConsumerConfirmReceiver.receviceMsgAutoConfirm(ConsumerConfirmReceiver.java:33) ~[classes/:na]\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_91]\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_91]\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_91]\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_91]\n消费确认测试 => 自动确认新消息767-0\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("消息虽然消费失败了，但是没有出现消息回退到队列的情况。确实解决了消息阻塞的问题，但是消息没有正确消费，被丢失也是很严重的。")]),s._v(" "),n("h3",{attrs:{id:"控制应答的模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#控制应答的模式"}},[s._v("#")]),s._v(" 控制应答的模式")]),s._v(" "),n("p",[s._v("这个枚举类控制了我们的应答模式。不配置默认NONE,其实是autoAck=true")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("public enum AcknowledgeMode {\n\t/**\n\t * No acks - {@code autoAck=true} in {@code Channel.basicConsume()}.\n\t */\n\tNONE,\n\n\t/**\n\t * Manual acks - user must ack/nack via a channel aware listener.\n\t */\n\tMANUAL,\n\n\t/**\n\t * Auto - the container will issue the ack/nack based on whether\n\t * the listener returns normally, or throws an exception.\n\t * <p><em>Do not confuse with RabbitMQ {@code autoAck} which is\n\t * represented by {@link #NONE} here</em>.\n\t */\n\tAUTO;\n\t\n\t......\n\t\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("h2",{attrs:{id:"测试手动应答"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试手动应答"}},[s._v("#")]),s._v(" 测试手动应答")]),s._v(" "),n("h3",{attrs:{id:"构建自动应答队列-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构建自动应答队列-2"}},[s._v("#")]),s._v(" 构建自动应答队列")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("@Bean\npublic Queue handConfirmQueue() {\n    return new Queue(HAND_CONFIRM_QUEUE);\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"配置手动应答"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置手动应答"}},[s._v("#")]),s._v(" 配置手动应答")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 放在spring.rabbitmq后面\n# 消费者配置\nlistener:\n  simple:\n    # 最多只允许一条未确认\n    prefetch: 1\n    # 开启手动应答\n    acknowledge-mode: manual\n    default-requeue-rejected: false\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h3",{attrs:{id:"构造消费者-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构造消费者-2"}},[s._v("#")]),s._v(" 构造消费者")]),s._v(" "),n("p",[s._v("同样的在消息里面放一个标志，便于产生异常。我们先不做手动应答，看看在开启应答的情况下是怎样的。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@RabbitListener(queues = QueueConfig.HAND_CONFIRM_QUEUE)\npublic void receviceMsgHandConfirm(Message message, Channel channel) {\n    String msg = new String(message.getBody());\n    System.out.println("消费确认测试 => " + msg);\n    int flag = Integer.parseInt(msg.split("-")[1]);\n    try {\n        Thread.sleep(1000);\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n    int x = 5 / flag;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h3",{attrs:{id:"测试正常消费"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试正常消费"}},[s._v("#")]),s._v(" 测试正常消费")]),s._v(" "),n("p",[s._v("我们往队列里面发送三条正常消息，即不会产生异常的消息。如下，三条消息，只消费了一条。还可以看到Rabbitmq管理系统上，有两条消息已准备，\n有一条消息没有应答，一共有三条消息。还记得配置文件吗，配置的是 prefetch: 1 ，只允许一条未应答的消息存在。在只有一个消费者的场景下，\n未对正常消费消息做出应答，也会造成消息消费的阻塞，消息持续积压。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("消费确认测试 => 手动确认新消息644-1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("img",{attrs:{src:"/images/rabbitmq/queue-7.png",alt:""}}),n("br"),s._v("、")]),s._v(" "),n("h3",{attrs:{id:"改造消费者代码-添加手动应答"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#改造消费者代码-添加手动应答"}},[s._v("#")]),s._v(" 改造消费者代码：添加手动应答")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@RabbitListener(queues = QueueConfig.HAND_CONFIRM_QUEUE)\npublic void receviceMsgHandConfirm(Message message, Channel channel) throws IOException {\n    String msg = new String(message.getBody());\n    System.out.println("消费确认测试 => " + msg);\n    int flag = Integer.parseInt(msg.split("-")[1]);\n    try {\n        Thread.sleep(5000);\n        int x = 5/flag;\n    }catch (Exception e){\n        // 消费逻辑出现异常-消息重新放入队列\n        channel.basicNack(message.getMessageProperties().getDeliveryTag(),false,true);\n    }\n    //消费逻辑正常\n    channel.basicAck(message.getMessageProperties().getDeliveryTag(),false);\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h3",{attrs:{id:"测试异常消费-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试异常消费-2"}},[s._v("#")]),s._v(" 测试异常消费")]),s._v(" "),n("p",[s._v("正常的就没必要测试了，正常消费的消息，手动应答后，就会从队列移除。我们看看手动应答的异常消费信息。"),n("br"),s._v("\n可以看到异常消费的消息，被重新回退到了消息队列。然后开始无限轮回的重复取出-消费-异常-回退。造成了消费阻塞和消息积压。\n之前我们也说过消息丢失也是很严重的问题。如果在不造成消息消费阻塞，又能保证消息不丢失呢？我们继续改造。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("消费确认测试 => 手动确认新消息853-0\n/ by zero\n2020-04-22 11:45:01.356 ERROR 16456 --- [68.163.201:5672] o.s.a.r.c.CachingConnectionFactory       : Channel shutdown: channel error; protocol method: #method<channel.close>(reply-code=406, reply-text=PRECONDITION_FAILED - unknown delivery tag 1, class-id=60, method-id=80)\n2020-04-22 11:45:02.359  INFO 16456 --- [ntContainer#0-1] o.s.a.r.l.SimpleMessageListenerContainer : Restarting Consumer@2aeefcc: tags=[[amq.ctag-Ssz3p1YbOaiq9W-a2898PQ]], channel=Cached Rabbit Channel: PublisherCallbackChannelImpl: AMQChannel(amqp://david@192.168.163.201:5672//dev,1), conn: Proxy@252f626c Shared Rabbit Connection: SimpleConnection@2d000e80 [delegate=amqp://david@192.168.163.201:5672//dev, localPort= 63860], acknowledgeMode=MANUAL local queue size=0\n消费确认测试 => 手动确认新消息853-0\n/ by zero\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[n("img",{attrs:{src:"/images/rabbitmq/queue-8.png",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"手动应答异常消费改造"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#手动应答异常消费改造"}},[s._v("#")]),s._v(" 手动应答异常消费改造")]),s._v(" "),n("h3",{attrs:{id:"改造分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#改造分析"}},[s._v("#")]),s._v(" 改造分析")]),s._v(" "),n("p",[n("img",{attrs:{src:"/images/rabbitmq/queue-13.png",alt:""}})]),s._v(" "),n("ul",[n("li",[s._v("正常的流程是"),n("strong",[s._v("Producer")]),s._v("把消息投递到"),n("strong",[s._v("topicExchange")]),s._v(",由它通过路由键"),n("strong",[s._v("ackHandKey")]),s._v("把消息存储在"),n("strong",[s._v("AckQueue")]),s._v(","),n("strong",[s._v("Consumer")]),s._v("从"),n("strong",[s._v("AckQueue")]),s._v("把消息取出，\n正常处理，这条线就完结了。")]),s._v(" "),n("li",[s._v("不正常的消费处理\n"),n("ul",[n("li",[n("strong",[s._v("1.")]),s._v(" "),n("strong",[s._v("Producer")]),s._v("把消息投递到"),n("strong",[s._v("TopicExchange")]),s._v(",继而分配到"),n("strong",[s._v("AckQueue")]),s._v(","),n("strong",[s._v("Consumer")]),s._v("取出消息。")]),s._v(" "),n("li",[n("strong",[s._v("2.")]),s._v(" "),n("strong",[s._v("Consumer")]),s._v("消费消息出现异常，"),n("strong",[s._v("channel.basicNack")]),s._v("()应答了队列，但是不把消息重新放入"),n("strong",[s._v("topicExchange")]),s._v("(还记得那个参数吧，这就不多说了。)")]),s._v(" "),n("li",[n("strong",[s._v("3.")]),s._v(" 消息没有回退到"),n("strong",[s._v("AckQueue")]),s._v(",由于绑定了死信交换机，消息进入到了"),n("strong",[s._v("DeadLetterExchange")]),s._v(",再由绑定的路由键"),n("strong",[s._v("ackRetryKey")]),s._v(",把消息分配到"),n("strong",[s._v("RetryQueue")])]),s._v(" "),n("li",[n("strong",[s._v("4.")]),s._v(" "),n("strong",[s._v("RetryQueue")]),s._v("是一个延迟5s，且没有配置消费者的死信队列。5s超时后，超时后传递给"),n("strong",[s._v("TopicExchange")]),s._v("。然后开始1234又一次轮回。")]),s._v(" "),n("li",[n("strong",[s._v("5.")]),s._v(" "),n("strong",[s._v("Consume")]),s._v("r内部有判断同一条消息，消费次数的记录，当消息重试记录大于3(第一次进来是0，大于3其实是大于4)时。将消息绑定路由键\n"),n("strong",[s._v("ackFailKey")]),s._v("发送到"),n("strong",[s._v("TopicExchange")]),s._v(",继而分配到"),n("strong",[s._v("FailQueue")]),s._v("中")]),s._v(" "),n("li",[n("strong",[s._v("6.")]),s._v(" 在"),n("strong",[s._v("FailQueue")]),s._v("中消息，就是多次尝试后无法被正确消费的消息，这里可以给它配置一个消费者监听器，消费消息发送邮件警告。或者还可以继续把\n消息投递回去继续循环(没多大意义)。")])])]),s._v(" "),n("li",[s._v("这里有一个关键点，就是"),n("strong",[s._v("AckQueue")]),s._v("和"),n("strong",[s._v("RetryQueue")]),s._v("互为对方死信队列，只是一个是消息主动丢弃触发，另一个是超时触发。")]),s._v(" "),n("li",[s._v("这样设计的意义，在于消息经过时间间隔重试，不会存在消息回退到队头产生的消费阻塞。")]),s._v(" "),n("li",[s._v("那就按照图中的命名操作起来吧。")])]),s._v(" "),n("h3",{attrs:{id:"实现部分"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现部分"}},[s._v("#")]),s._v(" 实现部分")]),s._v(" "),n("h4",{attrs:{id:"队列配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#队列配置"}},[s._v("#")]),s._v(" 队列配置")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Bean\npublic Queue handAckQueue(){\n    Map<String, Object> args = new HashMap<>();\n    args.put("x-dead-letter-exchange", ExchangeConfig.DEAD_LETTER_EXCHANGE);\n    args.put("x-dead-letter-routing-key", BindingConfig.ROUTINGKEY_HAND_RETRY_NAME);\n    return new Queue(HAND_ACK_QUEUE,false,false,false,args);\n}\n\n@Bean\npublic Queue handRetryQueue(){\n    Map<String, Object> args = new HashMap<>();\n    args.put("x-dead-letter-exchange", ExchangeConfig.TOPIC_EXCHANGE);\n    args.put("x-dead-letter-routing-key", BindingConfig.ROUTINGKEY_HAND_ACK_NAME);\n    args.put("x-message-ttl",5000);\n    return new Queue(HAND_RETRY_QUEUE,false,false,false,args);\n}\n\n@Bean\npublic Queue handFailQueue(){\n    return new Queue(HAND_FAIL_QUEUE);\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("h4",{attrs:{id:"绑定关系配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#绑定关系配置"}},[s._v("#")]),s._v(" 绑定关系配置")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("@Bean\npublic Binding handAckBinding(TopicExchange topicExchange, Queue handAckQueue) {\n    return BindingBuilder.bind(handAckQueue).to(topicExchange).with(ROUTINGKEY_HAND_ACK_NAME);\n}\n\n@Bean\npublic Binding handRetryBinding(TopicExchange deadLetterExchange, Queue handRetryQueue) {\n    return BindingBuilder.bind(handRetryQueue).to(deadLetterExchange).with(ROUTINGKEY_HAND_RETRY_NAME);\n}\n\n@Bean\npublic Binding handFailBinding(TopicExchange topicExchange, Queue handFailQueue) {\n    return BindingBuilder.bind(handFailQueue).to(topicExchange).with(ROUTINGKEY_HAND_FAIL_NAME);\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h4",{attrs:{id:"消息生产者"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#消息生产者"}},[s._v("#")]),s._v(" 消息生产者")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("public boolean sendToHandAckQueue(String msg){\n    this.template.convertAndSend(topicExchange.getName(), BindingConfig.ROUTINGKEY_HAND_ACK_NAME,msg);\n    return true;\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h4",{attrs:{id:"消息消费者"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#消息消费者"}},[s._v("#")]),s._v(" 消息消费者")]),s._v(" "),n("ul",[n("li",[s._v("1.最关键的是获取同一条消息重试次数的方法")]),s._v(" "),n("li",[s._v("2.次数超过预设判断时，是发送绑定新路由的消息，并且不退回消息。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@RabbitListener(queues = QueueConfig.HAND_ACK_QUEUE)\npublic void receive(Message message, Channel channel) throws IOException {\n    String msg = new String(message.getBody());\n    long retryCount = getRetryCount(message.getMessageProperties());\n    if (retryCount > 3) {\n        channel.basicAck(message.getMessageProperties().getDeliveryTag(), false);\n        rabbitTemplate.convertAndSend(ExchangeConfig.TOPIC_EXCHANGE, BindingConfig.ROUTINGKEY_HAND_FAIL_NAME,msg);\n        return;\n    }\n    int flag = Integer.parseInt(msg.split("-")[1]);\n    System.out.println("[HandAck消费监听器]第 " + retryCount + " 次消费，消息为 => " + msg + ",时间为 =>" + LocalDateTime.now());\n\n    try {\n        int x = 5 / flag;\n    } catch (Exception e) {\n        System.out.println(e.getMessage());\n        // 消费逻辑出现异常-消息重新放入队列\n        channel.basicNack(message.getMessageProperties().getDeliveryTag(), false, false);\n    }\n    //消费逻辑正常\n    channel.basicAck(message.getMessageProperties().getDeliveryTag(), false);\n}\n\n/**\n * 获取消息被重试的次数\n */\nprivate long getRetryCount(MessageProperties messageProperties) {\n    Long retryCount = 0L;\n    if (null != messageProperties) {\n        List<Map<String, ?>> deaths = messageProperties.getXDeathHeader();\n        if (deaths != null && deaths.size() > 0) {\n            Map<String, Object> death = (Map<String, Object>) deaths.get(0);\n            retryCount = (Long) death.get("count");\n        }\n    }\n    return retryCount;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br")])]),n("h4",{attrs:{id:"看结果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#看结果"}},[s._v("#")]),s._v(" 看结果")]),s._v(" "),n("ul",[n("li",[s._v("重试间隔就是延迟队列设计的5s")]),s._v(" "),n("li",[s._v("最后消息也确实落在HandFailQueue\n"),n("img",{attrs:{src:"/images/rabbitmq/queue-14.png",alt:""}}),s._v(" "),n("img",{attrs:{src:"/images/rabbitmq/queue-15.png",alt:""}})])])])}),[],!1,null,null,null);e.default=t.exports}}]);