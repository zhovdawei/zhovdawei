(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{401:function(s,t,a){"use strict";a.r(t);var n=a(42),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"参数化构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数化构建"}},[s._v("#")]),s._v(" 参数化构建")]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"准备工作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[s._v("#")]),s._v(" 准备工作")]),s._v(" "),a("h3",{attrs:{id:"提交一个分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交一个分支"}},[s._v("#")]),s._v(" 提交一个分支")]),s._v(" "),a("p",[s._v("在192.168.163.103上操作")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[root@host103 ~]# cd test/app/\n[root@host103 app]# git branch\n* master\n# 创建 test 分支\n[root@host103 app]# git branch test\n# 切换到 test 分支\n[root@host103 app]# git checkout test\nSwitched to branch 'test'\n[root@host103 app]# git branch\n  master\n* test\n# 创建一个文件\n[root@host103 app]# touch a.html\n[root@host103 app]# git add .\n[root@host103 app]# git commit -m \"test\"\n[test 5dc8773] test\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 a.html\n# 将文件推送到 test 分支 \n[root@host103 app]# git push origin test\nCounting objects: 4, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 258 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo git@192.168.163.105:/home/git/repos/app.git\n * [new branch]      test -> test\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("h3",{attrs:{id:"jenkins访问git认证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jenkins访问git认证"}},[s._v("#")]),s._v(" jenkins访问git认证")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 在jenkins服务器(192.168.163.101)上操作\n\n# jenkins以root身份运行\n[root@host101 ~]# vi /etc/sysconfig/jenkins \n###############################################\nJENKINS_USER="root"\n###############################################\n\n# 重启jenkins\n[root@host101 ~]# systemctl restart jenkins\n\n# 安装git,然后生成凭证\n[root@host101 ~]# yum install git -y \n[root@host101 ~]# ssh-keygen\n[root@host101 ~]# cat .ssh/id_rsa.pub\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDWmSU8L4Rcbp6EtvE6LxSIhpliVGobRdzTOqeSJTM9UDL92FCWm2yNOE/DPVTVzx069gBVo0rHxNCoSOMYkk/wHpBVsMnRyaR88pBztM0B5SDbc1D0u6R68mB9EKYTiqaq4Aw9vfq2a9AGeeOpDJfMM0GhaR5yGm47YfAH467+RXIaer0mbgMxk/bElOggH8PHB+i+WOGXG6/Q9cgz2EdHi1nOyfK4oIsBXRjsRt2DEibzBrya9nD2xJwTjaesVvF2Kp3oXCcKTSWegmMTCcZZl9JcNMY/OuK1xgHl+D6OIPyEWDylYzj6EwI8kFAODogI0g+V root@host101\n\n##############################################################################\n\n# 在git服务器(192.168.163.105)上操作\n# 进入git\n[root@host105 ~]# su - git\n\n# 编辑.ssh/authorized_keys，并把101生成的凭证复制粘贴进来\n[git@host105 ~]$ vi .ssh/authorized_keys\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("h3",{attrs:{id:"有一个问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有一个问题"}},[s._v("#")]),s._v(" 有一个问题")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/jenkins/jenkins-pro.png",alt:""}}),a("br"),s._v("\n貌似第一次远程访问，这个yes必须手动输入。jenkins没办法自己绕过这一关，\n即使是ssh方式第一次也会出现这个问题。如果各位也遇到了这个诡异的问题，\n自己寻找解决办法，实在不行，就手动操作一发吧。")]),s._v(" "),a("h2",{attrs:{id:"三种参数化构建方式举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三种参数化构建方式举例"}},[s._v("#")]),s._v(" 三种参数化构建方式举例")]),s._v(" "),a("p",[s._v("这里我们以git拉取分支代码场景，来演示动态配置分支这个参数的几种方式。\n下面我们先创建一个任务test。\n"),a("img",{attrs:{src:"/images/jenkins/jenkin-1.gif",alt:""}}),a("br")]),s._v(" "),a("h3",{attrs:{id:"字符参数构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符参数构建"}},[s._v("#")]),s._v(" 字符参数构建")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/jenkins/jenkin-2.gif",alt:""}}),a("br"),s._v("\n上面这个演示分三步。"),a("br"),s._v("\n第一步，创建了一个字符类型的参数：branch,然后设置了一个默认值：master"),a("br"),s._v("\n第二步，在git配置栏，分支的取值来至于 ${branch}"),a("br"),s._v("\n第三步，配置了个脚本执行，打印branch的值"),a("br"),s._v("\n当我们再构建的时候，可以看到bulid with parameter。点击进去，就可以看到，\n需要我们填入一个值。jenkins服务器从远端拉取代码时，就会把填入的值当做一个\n分支。如果不填，那就是默认master。构建完，是成功的，我们从控制台的\n日志打印也看到了branch的值。\n这样明显不够优雅，如果你的分支太多太长，你还记住的吗？就算你的记得住，\n你填的对吗？所以如果是选择分支，就太好了。下面我们演示使用参数插件，\n来生成参数化构建的选择方式。")]),s._v(" "),a("h3",{attrs:{id:"extended-choice-parameter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extended-choice-parameter"}},[s._v("#")]),s._v(" Extended Choice Parameter")]),s._v(" "),a("p",[s._v("分两种方式测试："),a("br"),s._v("\nValue方式测试"),a("br"),s._v("\nPropertyFile方式测试"),a("br")]),s._v(" "),a("h4",{attrs:{id:"安装插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装插件"}},[s._v("#")]),s._v(" 安装插件")]),s._v(" "),a("p",[s._v("在插件管理页面，可选插件搜索“Extended Choice Parameter”。选择它，然后直接安装。\n等待安装完成再进行下一步。")]),s._v(" "),a("h4",{attrs:{id:"value方式测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#value方式测试"}},[s._v("#")]),s._v(" Value方式测试")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/jenkins/jenkin-3.gif",alt:""}}),a("br"),s._v("\n注意Extended Choice Parameter几个选项，对于分支的选择，我们要注意是"),a("br"),s._v(" "),a("strong",[s._v("Parameter Type")]),s._v(" : 勾选单项选择。虽然它默认是单选，但是我们需要注意到。"),a("br"),s._v(" "),a("strong",[s._v("Delimiter")]),s._v(" : 分隔符，注意中英文逗号。"),a("br"),s._v(" "),a("strong",[s._v("Value")]),s._v(" : 勾选并在下方填写多个选项值，英文逗号隔开。"),a("br"),s._v("\n再次进入构建操作，发现，现在是选择分支了。这就比较人性化了。"),a("br")]),s._v(" "),a("p",[s._v("下面用property演示。")]),s._v(" "),a("h4",{attrs:{id:"propertyfile方式测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#propertyfile方式测试"}},[s._v("#")]),s._v(" PropertyFile方式测试")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 文件创建在jenkins服务器上，目录自定\n# 创建property文件，在/root/property/目录下\n[root@host101 property]# vi branch.property\n################################################\nbranch=master,test,dev,dev-admin,dev-david\n################################################\n\n/root/property/branch.property\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[a("img",{attrs:{src:"/images/jenkins/jenkin-4.gif",alt:""}}),a("br"),s._v("\n首先在jenkins上创建branch配置文件，然后构建参数选择property,输入\n文件地址和配置文件的key即可。构建测试也是成功的。"),a("br")]),s._v(" "),a("p",[s._v("虽然上面两种方式给与了很大的便利性，但是对于git来说，还是不够优雅。\n但凡开发者，增加删减了分支，我们对于branch的参数必须重新配置。下面\n我们用另外一个插件，它能自动获取分支的变更，提供给我选择最新的分支\n版本。这就很优雅了。嘿嘿。")]),s._v(" "),a("h3",{attrs:{id:"git-parameter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-parameter"}},[s._v("#")]),s._v(" Git Parameter")]),s._v(" "),a("h4",{attrs:{id:"安装插件-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装插件-2"}},[s._v("#")]),s._v(" 安装插件")]),s._v(" "),a("p",[s._v("在插件管理页面，可选插件搜索“Git Parameter”。选择它，然后直接安装。\n等待安装完成再进行下一步。")]),s._v(" "),a("h4",{attrs:{id:"配置参数并测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置参数并测试"}},[s._v("#")]),s._v(" 配置参数并测试")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/jenkins/jenkin-5.gif",alt:""}}),a("br"),s._v("\n这里还可以配置tag参数(版本号)。不过从上面的演示，可以知道，每次构建\n的时候，插件会帮我们重新拉取最新的分支明细。我们只需要选择就行，而\n不用关心分支的动态变化。这就是非常优雅的做法了。美滋滋。")])])}),[],!1,null,null,null);t.default=e.exports}}]);