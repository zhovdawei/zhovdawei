(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{464:function(e,a,n){"use strict";n.r(a);var s=n(42),t=Object(s.a)({},(function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"rabbitmq进阶六之延迟消费"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq进阶六之延迟消费"}},[e._v("#")]),e._v(" RabbitMQ进阶六之延迟消费")]),e._v(" "),n("hr"),e._v(" "),n("h2",{attrs:{id:"场景描述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#场景描述"}},[e._v("#")]),e._v(" 场景描述")]),e._v(" "),n("p",[e._v("有这样一个消息，当用户创建了一个未支付订单。业务逻辑是保留10分钟，10分内未支付，就将订单取消。\n一般的做法是间隔一段时间轮询，看看该订单到期了没有。另外一种做法就是利用延迟队列，创建一个延迟\n15分钟的消息，携带订单号。当15分钟到了，取出消息消费，检测订单状态，如果订单已经支付了，\n不做任何处理，如果订单还是未支付状态，那么将订单修改为取消。")]),e._v(" "),n("h2",{attrs:{id:"测试延迟消费"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试延迟消费"}},[e._v("#")]),e._v(" 测试延迟消费")]),e._v(" "),n("h3",{attrs:{id:"业务分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#业务分析"}},[e._v("#")]),e._v(" 业务分析")]),e._v(" "),n("ul",[n("li",[e._v("结合前面的死信队列，我们需要创建两个队列。一个不配消费者的延迟队列，只做消息阻塞15分钟，\n当然测试为了快速见结果，我们缩短为10s。另一个队列绑定在死信交换机上，当延迟队列的消息\n超时，消息经由死信交换机进入到死信队列。再给死信队列配置一个消费者监听器，消费消息，\n开始处理订单状态判断的逻辑流程。")]),e._v(" "),n("li",[e._v("这里其实就可以看出，延迟队列的工作只有一个就是阻塞，而死信队列反而成了实际处理业务需求的队列。")])]),e._v(" "),n("h3",{attrs:{id:"创建延迟队列和业务处理队列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建延迟队列和业务处理队列"}},[e._v("#")]),e._v(" 创建延迟队列和业务处理队列")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('@Bean\npublic Queue orderHandleQueue(){\n    return new Queue(ORDER_HANDLE_QUEUE);\n}\n\n@Bean\npublic Queue orderDelayQueue(){\n    Map<String, Object> args = new HashMap<>();\n    //x-dead-letter-exchange    这里声明当前队列绑定的死信交换机\n    args.put("x-dead-letter-exchange", ExchangeConfig.DEAD_LETTER_EXCHANGE);\n    //x-dead-letter-routing-key  这里声明当前队列的死信路由key\n    args.put("x-dead-letter-routing-key", BindingConfig.ROUTINGKEY_ORDER_HANDLE_NAME);\n    //x-message-ttl  这里声明消息的超时时间\n    args.put("x-message-ttl",5000);\n    return new Queue(ORDER_DELAY_QUEUE,false,false,false,args);\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br")])]),n("h3",{attrs:{id:"绑定队列到交换机"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#绑定队列到交换机"}},[e._v("#")]),e._v(" 绑定队列到交换机")]),e._v(" "),n("ul",[n("li",[e._v("1.orderDelayQueue是做超时阻塞的应该绑定在普通交换机上")]),e._v(" "),n("li",[e._v("2.orderHandleQueue是实际来处理业务逻辑的，绑定在死信交换机上")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("@Bean\npublic Binding orderHandleBinding(TopicExchange deadLetterExchange, Queue orderHandleQueue) {\n    return BindingBuilder.bind(orderHandleQueue).to(deadLetterExchange).with(ROUTINGKEY_ORDER_HANDLE_NAME);\n}\n\n@Bean\npublic Binding orderDelayBinding(TopicExchange topicExchange, Queue orderDelayQueue) {\n    return BindingBuilder.bind(orderDelayQueue).to(topicExchange).with(ROUTINGKEY_ORDER_DELAY_NAME);\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("h3",{attrs:{id:"消息生产者和消费者"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#消息生产者和消费者"}},[e._v("#")]),e._v(" 消息生产者和消费者")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('1.消息生产投递到延迟队列 orderDelayQueue\npublic boolean sendOrderDelayQueue(String msg){\n    rabbitTemplate.convertAndSend(topicExchange.getName(), BindingConfig.ROUTINGKEY_ORDER_DELAY_NAME,msg);\n    System.out.println(msg+" : 发送时间 => "+ LocalDateTime.now());\n    return true;\n}\n\n2.消息消费监听OrderHandleQueue, 因为消息延迟后将进入这里\n@RabbitListener(queues = QueueConfig.ORDER_HANDLE_QUEUE)\npublic void receiveHandle(String msg) throws IOException {\n    String orderId = msg.split(":")[1];\n    System.out.println("[监听未支付订单] => " + orderId + " : " + LocalDateTime.now());\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br")])]),n("h3",{attrs:{id:"测试结果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试结果"}},[e._v("#")]),e._v(" 测试结果")]),e._v(" "),n("ul",[n("li",[e._v("符合我们前面10s后取出订单号，然后处理检测支付状态的预期。")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("[未支付订单消息]订单号:210719 : 发送时间 => 2020-04-22T18:24:07.716\n[监听未支付订单] => 210719 : 2020-04-22T18:24:17.755\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);